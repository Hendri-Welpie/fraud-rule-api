services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: frauddb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d frauddb -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s  # <--- Add this
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - dbnet

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: start-dev
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/frauddb
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    networks:
      - dbnet

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_CONFIG_UPGRADE_CHECK_ENABLED: 'False'
      PGADMIN_LISTEN_ADDRESS: 0.0.0.0  # <--- Recommended for stability
    ports:
      - "8050:80"
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - dbnet

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dbnet

  redis-insight:
    image: redis/redisinsight:latest
    container_name: redis-insight
    ports:
      - "8540:5540"
    volumes:
      - redis_insight_data:/data
    networks:
      - dbnet
    depends_on:
      - redis

  fraud-rule-api:
    container_name: fraud
    image: hendricoetsee/fraud-rule-api:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "9080:9080"   # Map host 9080 â†’ container 8080
    depends_on:
      - postgres
      - redis
    networks:
      - dbnet

volumes:
  pgdata:
  pgadmin_data:
  redis_data:
  redis_insight_data:

networks:
  dbnet:
    driver: bridge